name: Lint

on:
  workflow_call:

jobs:
  golangci:
    # See https://github.com/pulumi/pulumi/issues/9280 for why this is set to v1.44
    container: golangci/golangci-lint:v1.44
    name: Lint ${{ matrix.directory }}
    strategy:
      matrix:
        directory: [ sdk, pkg, tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Lint ${{ matrix.directory }}
        run: |
          cd ${{ matrix.directory }} && golangci-lint run -c ../.golangci.yml

  protobuf-lint:
    name: Check Protobufs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
        # This till display missing pulumictl errors, but it won't prevent the lint from working.
      - name: Check Protobufs
        run: |
          make check-proto

  sdk-lint:
    name: Lint SDKs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.17.x]
        python-version: [3.9.x]
        dotnet-version: [6.0.x]
        node-version: [14.x]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Go Cache
        uses: actions/cache@v2
        id: go-cache
        if: ${{ runner.os != 'Windows' }} # Note [Windows Go Cache] in build.yml
        with:
          path: |
              ${{ steps.go-cache-paths.outputs.go-build }}
              ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-cache-${{ hashFiles('*/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: sdk/python/requirements.txt
      - name: Set up DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - run: mkdir -p "${{ runner.temp }}/opt/pulumi/nuget"
      - name: Add NuGet packages as a local NuGet source
        run: |
          command -v dotnet
          dotnet --version
          dotnet nuget add source "${{ runner.temp }}/opt/pulumi/nuget"
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: sdk/nodejs/package.json
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip requests wheel urllib3 chardet
      - name: Setup git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
      - name: Update path
        run: |
          echo "$RUNNER_TEMP/opt/pulumi/bin" >> "$GITHUB_PATH"
      - name: Fetch Tags
        run: |
          git fetch --quiet --prune --unshallow --tags
      - name: Set Go Dep path
        run: |
          echo "PULUMI_GO_DEP_ROOT=$(dirname "$(pwd)")" >> "$GITHUB_ENV"
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.7.1
        with:
          repo: pulumi/pulumictl
          tag: v0.0.32
          cache: enable
      - name: Ensure
        run: |
          make ensure
      - name: Lint Node
        run: |
          cd sdk/nodejs && make lint
      - name: Lint Python
        run: |
          cd sdk/python && make lint
      - name: Lint .NET
        run: |
          cd sdk/dotnet && make lint

  actionlint:
    name: actionlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # These vars are format strings.
          # shellcheck disable=SC2016
          go run github.com/rhysd/actionlint/cmd/actionlint@v1.6.17 \
            -format '{{range $err := .}}::error file={{$err.Filepath}},line={{$err.Line}},col={{$err.Column}}::{{$err.Message}}%0A```%0A{{replace $err.Snippet "\\n" "%0A"}}%0A```\n{{end}}' -ignore 'SC2016:'
