{
  "version": "1.2.3",
  "name": "example",
  "allowedPackageNames": ["foo", "bar"],
  "pluginDownloadURL": "example.com/download",
  "types": {
    "example::Object": {
      "properties": {
        "foo": {
          "$ref": "#/resources/example::Resource"
        },
        "bar": {
          "type": "string"
        },
        "others": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/types/example::SomeOtherObject"
            }
          },
          "description": "List of lists of other objects"
        },
        "configs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/types/example::ConfigMap"
          }
        },
        "stillOthers": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/types/example::SomeOtherObject"
            }
          },
          "description": "Mapping from string to list of some other object"
        }
      },
      "type": "object"
    },
    "example::OtherResourceOutput": {
      "properties": {
        "foo": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "example::SomeOtherObject": {
      "properties": {
        "baz": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "example::ConfigMap": {
      "properties": {
        "config": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "example::EnumOverlay": {
      "type": "string",
      "enum": [
        {
          "name": "SomeEnumValue",
          "value": "SOME_ENUM_VALUE"
        }
      ],
      "isOverlay": true
    },
    "example::ConfigMapOverlay": {
      "isOverlay": true,
      "properties": {
        "config": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "example::ObjectWithNodeOptionalInputs": {
      "properties": {
        "foo": {
          "type": "string"
        },
        "bar": {
          "type": "integer"
        }
      },
      "required": ["foo"],
      "language": {
        "nodejs": {
          "requiredInputs": []
        }
      },
      "type": "object"
    }
  },
  "resources": {
    "example::Resource": {
      "properties": {
        "bar": {
          "type": "string",
          "secret": true
        },
        "baz": {
          "type": "string",
          "secret": true
        }
      },
      "inputProperties": {
        "bar": {
          "type": "string",
          "secret": true,
          "willReplaceOnChanges": true
        }
      },
      "type": "object"
    },
    "example::OtherResource": {
      "isComponent": true,
      "properties": {
        "foo": {
          "$ref": "#/resources/example::Resource"
        }
      },
      "inputProperties": {
        "foo": {
          "$ref": "#/resources/example::Resource"
        }
      },
      "type": "object"
    },
    "bar::BarResource": {
      "isComponent": true,
      "properties": {
        "foo": {
          "$ref": "#/resources/example::Resource"
        }
      },
      "inputProperties": {
        "foo": {
          "$ref": "#/resources/example::Resource"
        }
      },
      "type": "object"
    },
    "foo::FooResource": {
      "isComponent": true,
      "properties": {
        "foo": {
          "$ref": "#/resources/example::Resource"
        }
      },
      "inputProperties": {
        "foo": {
          "$ref": "#/resources/example::Resource"
        }
      },
      "type": "object"
    },

    "example::OverlayResource": {
      "isOverlay": true,
      "description": "Provides a VPC resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\n\nconst main = new aws.ec2.Vpc(\"main\", {\n    cidrBlock: \"10.0.0.0/16\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\n\nmain = aws.ec2.Vpc(\"main\", cidr_block=\"10.0.0.0/16\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = new Aws.Ec2.Vpc(\"main\", new()\n    {\n        CidrBlock = \"10.0.0.0/16\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ec2.NewVpc(ctx, \"main\", \u0026ec2.VpcArgs{\n\t\t\tCidrBlock: pulumi.String(\"10.0.0.0/16\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.ec2.Vpc;\nimport com.pulumi.aws.ec2.VpcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var main = new Vpc(\"main\", VpcArgs.builder()        \n            .cidrBlock(\"10.0.0.0/16\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  main:\n    type: aws:ec2:Vpc\n    properties:\n      cidrBlock: 10.0.0.0/16\n```\n\nBasic usage with tags:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\n\nconst main = new aws.ec2.Vpc(\"main\", {\n    cidrBlock: \"10.0.0.0/16\",\n    instanceTenancy: \"default\",\n    tags: {\n        Name: \"main\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\n\nmain = aws.ec2.Vpc(\"main\",\n    cidr_block=\"10.0.0.0/16\",\n    instance_tenancy=\"default\",\n    tags={\n        \"Name\": \"main\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var main = new Aws.Ec2.Vpc(\"main\", new()\n    {\n        CidrBlock = \"10.0.0.0/16\",\n        InstanceTenancy = \"default\",\n        Tags = \n        {\n            { \"Name\", \"main\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ec2.NewVpc(ctx, \"main\", \u0026ec2.VpcArgs{\n\t\t\tCidrBlock:       pulumi.String(\"10.0.0.0/16\"),\n\t\t\tInstanceTenancy: pulumi.String(\"default\"),\n\t\t\tTags: pulumi.StringMap{\n\t\t\t\t\"Name\": pulumi.String(\"main\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.ec2.Vpc;\nimport com.pulumi.aws.ec2.VpcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var main = new Vpc(\"main\", VpcArgs.builder()        \n            .cidrBlock(\"10.0.0.0/16\")\n            .instanceTenancy(\"default\")\n            .tags(Map.of(\"Name\", \"main\"))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  main:\n    type: aws:ec2:Vpc\n    properties:\n      cidrBlock: 10.0.0.0/16\n      instanceTenancy: default\n      tags:\n        Name: main\n```\n\nVPC with CIDR from AWS IPAM:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\n\nconst current = aws.getRegion({});\nconst testVpcIpam = new aws.ec2.VpcIpam(\"testVpcIpam\", {operatingRegions: [{\n    regionName: current.then(current =\u003e current.name),\n}]});\nconst testVpcIpamPool = new aws.ec2.VpcIpamPool(\"testVpcIpamPool\", {\n    addressFamily: \"ipv4\",\n    ipamScopeId: testVpcIpam.privateDefaultScopeId,\n    locale: current.then(current =\u003e current.name),\n});\nconst testVpcIpamPoolCidr = new aws.ec2.VpcIpamPoolCidr(\"testVpcIpamPoolCidr\", {\n    ipamPoolId: testVpcIpamPool.id,\n    cidr: \"172.2.0.0/16\",\n});\nconst testVpc = new aws.ec2.Vpc(\"testVpc\", {\n    ipv4IpamPoolId: testVpcIpamPool.id,\n    ipv4NetmaskLength: 28,\n}, {\n    dependsOn: [testVpcIpamPoolCidr],\n});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\n\ncurrent = aws.get_region()\ntest_vpc_ipam = aws.ec2.VpcIpam(\"testVpcIpam\", operating_regions=[aws.ec2.VpcIpamOperatingRegionArgs(\n    region_name=current.name,\n)])\ntest_vpc_ipam_pool = aws.ec2.VpcIpamPool(\"testVpcIpamPool\",\n    address_family=\"ipv4\",\n    ipam_scope_id=test_vpc_ipam.private_default_scope_id,\n    locale=current.name)\ntest_vpc_ipam_pool_cidr = aws.ec2.VpcIpamPoolCidr(\"testVpcIpamPoolCidr\",\n    ipam_pool_id=test_vpc_ipam_pool.id,\n    cidr=\"172.2.0.0/16\")\ntest_vpc = aws.ec2.Vpc(\"testVpc\",\n    ipv4_ipam_pool_id=test_vpc_ipam_pool.id,\n    ipv4_netmask_length=28,\n    opts=pulumi.ResourceOptions(depends_on=[test_vpc_ipam_pool_cidr]))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var current = Aws.GetRegion.Invoke();\n\n    var testVpcIpam = new Aws.Ec2.VpcIpam(\"testVpcIpam\", new()\n    {\n        OperatingRegions = new[]\n        {\n            new Aws.Ec2.Inputs.VpcIpamOperatingRegionArgs\n            {\n                RegionName = current.Apply(getRegionResult =\u003e getRegionResult.Name),\n            },\n        },\n    });\n\n    var testVpcIpamPool = new Aws.Ec2.VpcIpamPool(\"testVpcIpamPool\", new()\n    {\n        AddressFamily = \"ipv4\",\n        IpamScopeId = testVpcIpam.PrivateDefaultScopeId,\n        Locale = current.Apply(getRegionResult =\u003e getRegionResult.Name),\n    });\n\n    var testVpcIpamPoolCidr = new Aws.Ec2.VpcIpamPoolCidr(\"testVpcIpamPoolCidr\", new()\n    {\n        IpamPoolId = testVpcIpamPool.Id,\n        Cidr = \"172.2.0.0/16\",\n    });\n\n    var testVpc = new Aws.Ec2.Vpc(\"testVpc\", new()\n    {\n        Ipv4IpamPoolId = testVpcIpamPool.Id,\n        Ipv4NetmaskLength = 28,\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            testVpcIpamPoolCidr,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v5/go/aws\"\n\t\"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcurrent, err := aws.GetRegion(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttestVpcIpam, err := ec2.NewVpcIpam(ctx, \"testVpcIpam\", \u0026ec2.VpcIpamArgs{\n\t\t\tOperatingRegions: ec2.VpcIpamOperatingRegionArray{\n\t\t\t\t\u0026ec2.VpcIpamOperatingRegionArgs{\n\t\t\t\t\tRegionName: pulumi.String(current.Name),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttestVpcIpamPool, err := ec2.NewVpcIpamPool(ctx, \"testVpcIpamPool\", \u0026ec2.VpcIpamPoolArgs{\n\t\t\tAddressFamily: pulumi.String(\"ipv4\"),\n\t\t\tIpamScopeId:   testVpcIpam.PrivateDefaultScopeId,\n\t\t\tLocale:        pulumi.String(current.Name),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttestVpcIpamPoolCidr, err := ec2.NewVpcIpamPoolCidr(ctx, \"testVpcIpamPoolCidr\", \u0026ec2.VpcIpamPoolCidrArgs{\n\t\t\tIpamPoolId: testVpcIpamPool.ID(),\n\t\t\tCidr:       pulumi.String(\"172.2.0.0/16\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ec2.NewVpc(ctx, \"testVpc\", \u0026ec2.VpcArgs{\n\t\t\tIpv4IpamPoolId:    testVpcIpamPool.ID(),\n\t\t\tIpv4NetmaskLength: pulumi.Int(28),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\ttestVpcIpamPoolCidr,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.AwsFunctions;\nimport com.pulumi.aws.inputs.GetRegionArgs;\nimport com.pulumi.aws.ec2.VpcIpam;\nimport com.pulumi.aws.ec2.VpcIpamArgs;\nimport com.pulumi.aws.ec2.inputs.VpcIpamOperatingRegionArgs;\nimport com.pulumi.aws.ec2.VpcIpamPool;\nimport com.pulumi.aws.ec2.VpcIpamPoolArgs;\nimport com.pulumi.aws.ec2.VpcIpamPoolCidr;\nimport com.pulumi.aws.ec2.VpcIpamPoolCidrArgs;\nimport com.pulumi.aws.ec2.Vpc;\nimport com.pulumi.aws.ec2.VpcArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var current = AwsFunctions.getRegion();\n\n        var testVpcIpam = new VpcIpam(\"testVpcIpam\", VpcIpamArgs.builder()        \n            .operatingRegions(VpcIpamOperatingRegionArgs.builder()\n                .regionName(current.applyValue(getRegionResult -\u003e getRegionResult.name()))\n                .build())\n            .build());\n\n        var testVpcIpamPool = new VpcIpamPool(\"testVpcIpamPool\", VpcIpamPoolArgs.builder()        \n            .addressFamily(\"ipv4\")\n            .ipamScopeId(testVpcIpam.privateDefaultScopeId())\n            .locale(current.applyValue(getRegionResult -\u003e getRegionResult.name()))\n            .build());\n\n        var testVpcIpamPoolCidr = new VpcIpamPoolCidr(\"testVpcIpamPoolCidr\", VpcIpamPoolCidrArgs.builder()        \n            .ipamPoolId(testVpcIpamPool.id())\n            .cidr(\"172.2.0.0/16\")\n            .build());\n\n        var testVpc = new Vpc(\"testVpc\", VpcArgs.builder()        \n            .ipv4IpamPoolId(testVpcIpamPool.id())\n            .ipv4NetmaskLength(28)\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(testVpcIpamPoolCidr)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testVpcIpam:\n    type: aws:ec2:VpcIpam\n    properties:\n      operatingRegions:\n        - regionName: ${current.name}\n  testVpcIpamPool:\n    type: aws:ec2:VpcIpamPool\n    properties:\n      addressFamily: ipv4\n      ipamScopeId: ${testVpcIpam.privateDefaultScopeId}\n      locale: ${current.name}\n  testVpcIpamPoolCidr:\n    type: aws:ec2:VpcIpamPoolCidr\n    properties:\n      ipamPoolId: ${testVpcIpamPool.id}\n      cidr: 172.2.0.0/16\n  testVpc:\n    type: aws:ec2:Vpc\n    properties:\n      ipv4IpamPoolId: ${testVpcIpamPool.id}\n      ipv4NetmaskLength: 28\n    options:\n      dependson:\n        - ${testVpcIpamPoolCidr}\nvariables:\n  current:\n    Fn::Invoke:\n      Function: aws:getRegion\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nVPCs can be imported using the `vpc id`, e.g.,\n\n```sh\n $ pulumi import aws:ec2/vpc:Vpc test_vpc vpc-a01106c2\n```\n\n ",
      "properties": {
        "foo": {
          "$ref": "#/types/example::ConfigMapOverlay"
        },
        "bar": {
          "$ref": "#/types/example::EnumOverlay"
        }
      },
      "inputProperties": {
        "foo": {
          "$ref": "#/types/example::ConfigMapOverlay"
        },
        "bar": {
          "$ref": "#/types/example::EnumOverlay"
        }
      },
      "type": "object"
    },
    "example::TypeUses": {
      "properties": {
        "foo": {
          "$ref": "#/types/example::Object"
        },
        "bar": {
          "$ref": "#/types/example::SomeOtherObject"
        },
        "baz": {
          "$ref": "#/types/example::ObjectWithNodeOptionalInputs"
        }
      },
      "inputProperties": {
        "foo": {
          "$ref": "#/types/example::Object"
        },
        "bar": {
          "$ref": "#/types/example::SomeOtherObject"
        },
        "baz": {
          "$ref": "#/types/example::ObjectWithNodeOptionalInputs"
        }
      },
      "type": "object"
    }
  },
  "functions": {
    "example::argFunction": {
      "inputs": {
        "properties": {
          "arg1": {
            "$ref": "#/resources/example::Resource"
          }
        }
      },
      "outputs": {
        "properties": {
          "result": {
            "$ref": "#/resources/example::Resource"
          }
        }
      }
    },
    "example::overlayFunction": {
      "isOverlay": true,
      "inputs": {
        "properties": {
          "arg1": {
            "$ref": "#/resources/example::Resource"
          }
        }
      },
      "outputs": {
        "properties": {
          "result": {
            "$ref": "#/resources/example::Resource"
          }
        }
      }
    }
  },
  "language": {
    "csharp": {
      "projectReferences": [
        "..\\..\\..\\..\\..\\..\\..\\sdk\\dotnet\\Pulumi\\Pulumi.csproj"
      ],
      "packageReferences": {
        "Pulumi": "3.13"
      },
      "respectSchemaVersion": true
    },
    "go": {
      "importBasePath": "github.com/pulumi/pulumi/pkg/v3/codegen/testing/test/testdata/simple-resource-schema/go/example",
      "generateExtraInputTypes": true,
      "respectSchemaVersion": true
    },
    "nodejs": {
      "dependencies": {
        "@pulumi/pulumi": "^3.12"
      },
      "devDependencies": {
        "typescript": "^3.7.0"
      },
      "respectSchemaVersion": true,
      "pluginVersion": "3.2.1"
    },
    "python": {
      "respectSchemaVersion": true
    }
  }
}
