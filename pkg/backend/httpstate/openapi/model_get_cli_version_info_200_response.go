/*
Pulumi Service API

The Pulumi Service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetCLIVersionInfo200Response struct for GetCLIVersionInfo200Response
type GetCLIVersionInfo200Response struct {
	LatestVersion *string `json:"latestVersion,omitempty"`
	OldestWithoutWarning *string `json:"oldestWithoutWarning,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetCLIVersionInfo200Response GetCLIVersionInfo200Response

// NewGetCLIVersionInfo200Response instantiates a new GetCLIVersionInfo200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCLIVersionInfo200Response() *GetCLIVersionInfo200Response {
	this := GetCLIVersionInfo200Response{}
	return &this
}

// NewGetCLIVersionInfo200ResponseWithDefaults instantiates a new GetCLIVersionInfo200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCLIVersionInfo200ResponseWithDefaults() *GetCLIVersionInfo200Response {
	this := GetCLIVersionInfo200Response{}
	return &this
}

// GetLatestVersion returns the LatestVersion field value if set, zero value otherwise.
func (o *GetCLIVersionInfo200Response) GetLatestVersion() string {
	if o == nil || o.LatestVersion == nil {
		var ret string
		return ret
	}
	return *o.LatestVersion
}

// GetLatestVersionOk returns a tuple with the LatestVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCLIVersionInfo200Response) GetLatestVersionOk() (*string, bool) {
	if o == nil || o.LatestVersion == nil {
		return nil, false
	}
	return o.LatestVersion, true
}

// HasLatestVersion returns a boolean if a field has been set.
func (o *GetCLIVersionInfo200Response) HasLatestVersion() bool {
	if o != nil && o.LatestVersion != nil {
		return true
	}

	return false
}

// SetLatestVersion gets a reference to the given string and assigns it to the LatestVersion field.
func (o *GetCLIVersionInfo200Response) SetLatestVersion(v string) {
	o.LatestVersion = &v
}

// GetOldestWithoutWarning returns the OldestWithoutWarning field value if set, zero value otherwise.
func (o *GetCLIVersionInfo200Response) GetOldestWithoutWarning() string {
	if o == nil || o.OldestWithoutWarning == nil {
		var ret string
		return ret
	}
	return *o.OldestWithoutWarning
}

// GetOldestWithoutWarningOk returns a tuple with the OldestWithoutWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCLIVersionInfo200Response) GetOldestWithoutWarningOk() (*string, bool) {
	if o == nil || o.OldestWithoutWarning == nil {
		return nil, false
	}
	return o.OldestWithoutWarning, true
}

// HasOldestWithoutWarning returns a boolean if a field has been set.
func (o *GetCLIVersionInfo200Response) HasOldestWithoutWarning() bool {
	if o != nil && o.OldestWithoutWarning != nil {
		return true
	}

	return false
}

// SetOldestWithoutWarning gets a reference to the given string and assigns it to the OldestWithoutWarning field.
func (o *GetCLIVersionInfo200Response) SetOldestWithoutWarning(v string) {
	o.OldestWithoutWarning = &v
}

func (o GetCLIVersionInfo200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LatestVersion != nil {
		toSerialize["latestVersion"] = o.LatestVersion
	}
	if o.OldestWithoutWarning != nil {
		toSerialize["oldestWithoutWarning"] = o.OldestWithoutWarning
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetCLIVersionInfo200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetCLIVersionInfo200Response := _GetCLIVersionInfo200Response{}

	if err = json.Unmarshal(bytes, &varGetCLIVersionInfo200Response); err == nil {
		*o = GetCLIVersionInfo200Response(varGetCLIVersionInfo200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "latestVersion")
		delete(additionalProperties, "oldestWithoutWarning")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetCLIVersionInfo200Response struct {
	value *GetCLIVersionInfo200Response
	isSet bool
}

func (v NullableGetCLIVersionInfo200Response) Get() *GetCLIVersionInfo200Response {
	return v.value
}

func (v *NullableGetCLIVersionInfo200Response) Set(val *GetCLIVersionInfo200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCLIVersionInfo200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCLIVersionInfo200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCLIVersionInfo200Response(val *GetCLIVersionInfo200Response) *NullableGetCLIVersionInfo200Response {
	return &NullableGetCLIVersionInfo200Response{value: val, isSet: true}
}

func (v NullableGetCLIVersionInfo200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCLIVersionInfo200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


