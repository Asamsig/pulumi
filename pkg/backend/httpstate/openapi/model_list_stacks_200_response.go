/*
Pulumi Service API

The Pulumi Service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListStacks200Response struct for ListStacks200Response
type ListStacks200Response struct {
	Stacks []StackSummary `json:"stacks,omitempty"`
	// ContinuationToken is an opaque value used to mark the end of the all stacks. If non-nil, pass it into a subsequent call in order to get the next batch of results. A value of nil means that all stacks have been returned. 
	ContinuationToken *string `json:"continuationToken,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListStacks200Response ListStacks200Response

// NewListStacks200Response instantiates a new ListStacks200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStacks200Response() *ListStacks200Response {
	this := ListStacks200Response{}
	return &this
}

// NewListStacks200ResponseWithDefaults instantiates a new ListStacks200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStacks200ResponseWithDefaults() *ListStacks200Response {
	this := ListStacks200Response{}
	return &this
}

// GetStacks returns the Stacks field value if set, zero value otherwise.
func (o *ListStacks200Response) GetStacks() []StackSummary {
	if o == nil || o.Stacks == nil {
		var ret []StackSummary
		return ret
	}
	return o.Stacks
}

// GetStacksOk returns a tuple with the Stacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStacks200Response) GetStacksOk() ([]StackSummary, bool) {
	if o == nil || o.Stacks == nil {
		return nil, false
	}
	return o.Stacks, true
}

// HasStacks returns a boolean if a field has been set.
func (o *ListStacks200Response) HasStacks() bool {
	if o != nil && o.Stacks != nil {
		return true
	}

	return false
}

// SetStacks gets a reference to the given []StackSummary and assigns it to the Stacks field.
func (o *ListStacks200Response) SetStacks(v []StackSummary) {
	o.Stacks = v
}

// GetContinuationToken returns the ContinuationToken field value if set, zero value otherwise.
func (o *ListStacks200Response) GetContinuationToken() string {
	if o == nil || o.ContinuationToken == nil {
		var ret string
		return ret
	}
	return *o.ContinuationToken
}

// GetContinuationTokenOk returns a tuple with the ContinuationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStacks200Response) GetContinuationTokenOk() (*string, bool) {
	if o == nil || o.ContinuationToken == nil {
		return nil, false
	}
	return o.ContinuationToken, true
}

// HasContinuationToken returns a boolean if a field has been set.
func (o *ListStacks200Response) HasContinuationToken() bool {
	if o != nil && o.ContinuationToken != nil {
		return true
	}

	return false
}

// SetContinuationToken gets a reference to the given string and assigns it to the ContinuationToken field.
func (o *ListStacks200Response) SetContinuationToken(v string) {
	o.ContinuationToken = &v
}

func (o ListStacks200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Stacks != nil {
		toSerialize["stacks"] = o.Stacks
	}
	if o.ContinuationToken != nil {
		toSerialize["continuationToken"] = o.ContinuationToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ListStacks200Response) UnmarshalJSON(bytes []byte) (err error) {
	varListStacks200Response := _ListStacks200Response{}

	if err = json.Unmarshal(bytes, &varListStacks200Response); err == nil {
		*o = ListStacks200Response(varListStacks200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "stacks")
		delete(additionalProperties, "continuationToken")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListStacks200Response struct {
	value *ListStacks200Response
	isSet bool
}

func (v NullableListStacks200Response) Get() *ListStacks200Response {
	return v.value
}

func (v *NullableListStacks200Response) Set(val *ListStacks200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListStacks200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListStacks200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStacks200Response(val *ListStacks200Response) *NullableListStacks200Response {
	return &NullableListStacks200Response{value: val, isSet: true}
}

func (v NullableListStacks200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStacks200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


