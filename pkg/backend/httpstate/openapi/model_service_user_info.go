/*
Pulumi Service API

The Pulumi Service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServiceUserInfo struct for ServiceUserInfo
type ServiceUserInfo struct {
	Name *string `json:"name,omitempty"`
	GithubLogin *string `json:"githubLogin,omitempty"`
	AvatarUrl *string `json:"avatarUrl,omitempty"`
	Email *string `json:"email,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceUserInfo ServiceUserInfo

// NewServiceUserInfo instantiates a new ServiceUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUserInfo() *ServiceUserInfo {
	this := ServiceUserInfo{}
	return &this
}

// NewServiceUserInfoWithDefaults instantiates a new ServiceUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUserInfoWithDefaults() *ServiceUserInfo {
	this := ServiceUserInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceUserInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceUserInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceUserInfo) SetName(v string) {
	o.Name = &v
}

// GetGithubLogin returns the GithubLogin field value if set, zero value otherwise.
func (o *ServiceUserInfo) GetGithubLogin() string {
	if o == nil || o.GithubLogin == nil {
		var ret string
		return ret
	}
	return *o.GithubLogin
}

// GetGithubLoginOk returns a tuple with the GithubLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserInfo) GetGithubLoginOk() (*string, bool) {
	if o == nil || o.GithubLogin == nil {
		return nil, false
	}
	return o.GithubLogin, true
}

// HasGithubLogin returns a boolean if a field has been set.
func (o *ServiceUserInfo) HasGithubLogin() bool {
	if o != nil && o.GithubLogin != nil {
		return true
	}

	return false
}

// SetGithubLogin gets a reference to the given string and assigns it to the GithubLogin field.
func (o *ServiceUserInfo) SetGithubLogin(v string) {
	o.GithubLogin = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *ServiceUserInfo) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserInfo) GetAvatarUrlOk() (*string, bool) {
	if o == nil || o.AvatarUrl == nil {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *ServiceUserInfo) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl != nil {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *ServiceUserInfo) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ServiceUserInfo) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserInfo) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ServiceUserInfo) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ServiceUserInfo) SetEmail(v string) {
	o.Email = &v
}

func (o ServiceUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.GithubLogin != nil {
		toSerialize["githubLogin"] = o.GithubLogin
	}
	if o.AvatarUrl != nil {
		toSerialize["avatarUrl"] = o.AvatarUrl
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ServiceUserInfo) UnmarshalJSON(bytes []byte) (err error) {
	varServiceUserInfo := _ServiceUserInfo{}

	if err = json.Unmarshal(bytes, &varServiceUserInfo); err == nil {
		*o = ServiceUserInfo(varServiceUserInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "githubLogin")
		delete(additionalProperties, "avatarUrl")
		delete(additionalProperties, "email")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceUserInfo struct {
	value *ServiceUserInfo
	isSet bool
}

func (v NullableServiceUserInfo) Get() *ServiceUserInfo {
	return v.value
}

func (v *NullableServiceUserInfo) Set(val *ServiceUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUserInfo(val *ServiceUserInfo) *NullableServiceUserInfo {
	return &NullableServiceUserInfo{value: val, isSet: true}
}

func (v NullableServiceUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


