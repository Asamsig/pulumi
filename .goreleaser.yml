dist: goreleaser

project_name: pulumi

blobs:
- bucket: get.pulumi.com
  folder: releases/sdk/
  ids:
    - pulumi
  provider: s3
  region: us-west-2

builds:
- &pulumibin
  id: pulumi
  binary: pulumi
  dir: pkg
  main: ./cmd/pulumi
  gobinary: ../scripts/go-wrapper.sh
  env:
  - CGO_ENABLED=0
  - GO111MODULE=on
  goos: ['linux', 'darwin', 'windows']
  goarch: ['amd64', 'arm64']
  goamd64: ['v1']
  ldflags:
    - -X github.com/pulumi/pulumi/pkg/v3/version.Version={{.Tag}}
  mod_timestamp: '{{ .CommitTimestamp }}'
- <<: *pulumibin
  id: pulumi-language-go
  binary: pulumi-language-go
  dir: sdk
  main: ./go/pulumi-language-go
- <<: *pulumibin
  id: pulumi-language-nodejs
  binary: pulumi-language-nodejs
  dir: sdk
  main: ./nodejs/cmd/pulumi-language-nodejs
- <<: *pulumibin
  id: pulumi-language-python
  binary: pulumi-language-python
  dir: sdk
  main: ./python/cmd/pulumi-language-python
- <<: *pulumibin
  id: pulumi-language-dotnet
  binary: pulumi-language-dotnet
  dir: sdk
  main: ./dotnet/cmd/pulumi-language-dotnet

archives:
- id: pulumi
  wrap_in_directory: pulumi{{ if eq .Os "windows" }}/bin{{ end }}
  format_overrides:
    - goos: windows
      format: zip
  replacements:
    amd64: x64
  files:
      # OS specific scripts, not compiled
    - src: bin/{{ .Os }}/*
      dst: '.'
      strip_parent: true
      # binaries
    - src: bin/{{ .Os }}-{{ .Arch }}/*
      dst: '.'
      strip_parent: true
  name_template: "{{ .ProjectName }}-{{ .Tag }}-{{ .Os }}-{{ .Arch }}"

snapshot:
  name_template: "{{ .Version }}-SNAPSHOT"

checksum:
  name_template: "{{ .ProjectName }}-{{ .Version }}-checksums.txt"

brews:
  -
    name: pulumi
    tap:
      owner: pulumi
      name: homebrew-tap
    commit_author:
      name: pulumi-bot
      email: bot@pulumi.com
    homepage: "https://pulumi.com"
    description: "Pulumi - Modern Infrastructure as Code. Any cloud, any language "
    folder: Formula
    license: Apache-2.0
    test: |
      system "#{bin}/pulumi version"
    conflicts:
      - pulumi
    install: |-
      bin.install Dir["*"]

      # Install shell completions
      (bash_completion/"pulumi.bash").write Utils.safe_popen_read("#{bin}/pulumi gen-completion bash")
      (zsh_completion/"_pulumi").write Utils.safe_popen_read("#{bin}/pulumi gen-completion zsh")
      (fish_completion/"pulumi.fish").write Utils.safe_popen_read("#{bin}/pulumi gen-completion fish")

release:
  discussion_category_name: Releases
